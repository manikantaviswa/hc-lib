angular.module("hcLib",["camera","ngDialog","ui.bootstrap"]),angular.module("hcLib").directive("patientForm",function(){return e.$inject=["$scope","patientService","$stateParams","$state","ngDialog"],{restrict:"E",scope:{patient:"=?",onSubmit:"&"},controller:e,templateUrl:"src/patient-form/patient-form.tpl.html"};function e(t,e,i,n,r){function a(){t.form={},t.genderTypes=GENDERS,t.relationTypes=RELATIONS,t.patient?t.patient=t.patient||{}:(t.gender=t.genderTypes[0],t.relationType=t.relationTypes[1]),t.opId=i.opId}t.addPatient=function(){e.addPatient(t.patient).then(function(e){t.onSubmit({$patient:e}),r.close(r.latestID)})},t.getAgeFromDob=getAgeFromDob,t.getDateFromAge=getDateFromAge,t.init=a,t.getAgeFromDob=function(e){t.patient.age=getAgeFromDob(e)},t.getDateFromAge=function(e){t.patient.dob=getDateFromAge(e)},a()}}),angular.module("tcLib").service("casesheet",["httpService",function(t){this.save=function(e){return t.post("casesheet/saveorupdate",e)},this.caseSheetList=function(e){return t.get("casesheet/search",{opPatientId:e})}}]),angular.module("tcLib").service("commonService",["httpService",function(t){this.createDoctor=function(e){return t.post("common/doctor/create",e)},this.getDoctors=function(){return t.get("common/doctor/list")},this.getDoctorByUserId=function(e){return t.get("common/doctor/user/"+e)},this.getOpTypes=function(){return t.get("common/optype/list")},this.getOpSubTypes=function(){return t.get("common/opsubtype/list")},this.getLabData=function(){return t.get("common/lab/lab-data")},this.getLabReportData=function(){return t.get("common/lab/lab-report-data")},this.getLabTestNotes=function(){return t.get("common/lab/lab-test-notes")},this.getRequisitionSlip=function(){return t.get("common/lab/requisition-slip")}}]),angular.module("tcLib").service("companyService",["httpService",function(t){this.save=function(e){return t.post("company/saveorupdate",e)},this.companiesList=function(){return t.get("company/list")}}]),angular.module("tcLib").service("complaintService",["httpService",function(t){this.saveComplaint=function(e){return t.post("complaint/save",e)},this.saveComplaintTransation=function(e){return t.post("complaint/transact/saveorupdate",e)},this.complaintMastersList=function(e){return t.get("complaint/search",{patientId:e})},this.complaintTransactList=function(e){return t.get("complaint/transact/search",{opPatientId:e})}}]),angular.module("tcLib").service("drugFormulae",["httpService",function(t){this.save=function(e){return t.post("drugFormulae/saveorupdate",e)},this.drugFormulaeList=function(){return t.get("drugFormulae/list")}}]),angular.module("tcLib").provider("httpService",function(){var o="";try{o=location.href.split("/")[3]}catch(e){o=""}this.setBasePath=function(e){o=e},this.$get=["$http","$q",function(i,n){return{get:r.bind(null,"GET"),del:r.bind(null,"DELETE"),put:e.bind(null,"PUT"),post:e.bind(null,"POST"),upload:function(e,t,i,n,r){return s({url:t=a(t,n,r),method:e,data:i,transformRequest:angular.identity,headers:{"Content-Type":void 0}})}.bind(null,"POST"),getJSON:function(e,t,i){return i&&localStorage.getItem(i)?n.when(null).then(function(){var e=localStorage.getItem(i);return JSON.parse(e)}):r(e,t).then(function(e){return localStorage.setItem(i,e.json),e})}.bind(null,"GET")};function r(e,t,i,n){return s({method:e,url:t=a(t,i,n)})}function e(e,t,i,n,r){return s({method:e,url:t=a(t,n,r),data:i})}function a(e,t,i){return t&&(e+="?"+toURLParams(t,i)),"/"+o+"/"+e}function s(e){var t=n.defer();return i(e).success(function(e){e.isSuccess?t.resolve(e.response):t.reject(e)}).error(function(e){t.reject(e)}),t.promise}}]}),angular.module("tcLib").service("labPatientService",["httpService",function(i){this.save=function(e){return i.post("labpatient/save",e)},this.search=function(e){return i.get("labpatient/get",e)},this.saveReport=function(e){return i.post("labpatient/report/save",e)},this.getReport=function(e){return i.get("labpatient/report/get/"+e)},this.savePayment=function(e){return i.post("labpatient/payment/save",e)},this.getPayments=function(e){return i.get("labpatient/get/payments/"+e)},this.uploadReport=function(e,t){return i.upload("labpatient/uploadreport/"+e,t)}}]),angular.module("tcLib").service("locationService",["httpService",function(t){this.save=function(e){return t.post("location/saveorupdate",e)},this.locationsList=function(){return t.get("location/list")}}]),angular.module("tcLib").service("loginService",["httpService",function(t){this.login=function(e){return t.post("auth/login",e)},this.sessionUser=function(){return t.get("auth/sessionuser")}}]),angular.module("tcLib").service("medicineCategoryService",["httpService",function(t){this.save=function(e){return t.post("medicinecategory/saveorupdate",e)},this.medicineCategoryList=function(){return t.get("medicinecategory/list")}}]),angular.module("tcLib").service("medicineCategoryByDoctorService",["httpService",function(t){this.save=function(e){return t.post("medicinecategorybydoctor/saveorupdate",e)},this.medicineCategoryByDoctorList=function(){return t.get("medicinecategorybydoctor/list")}}]),angular.module("tcLib").service("medicineService",["httpService",function(t){this.save=function(e){return t.post("medicine/saveorupdate",e)},this.medicinesList=function(e){return t.get("medicine/list",{id:e})},this.medicineViewList=function(e){return t.get("medicine/listbyoptions",e)}}]),angular.module("tcLib").service("opPatientService",["httpService",function(t){this.save=function(e){return t.post("oppatient/createorupdate",e)},this.getOpPatientsListByOptions=function(e){return t.post("oppatient/listbyoptions",e)},this.getOpPatientByPatientId=function(e){return t.get("oppatient/getoppatientbyid/"+e)},this.getOpPatientCountWithStatusByOpId=function(e){return t.get("oppatient/statuscount/"+e)},this.getOrCreatePatientCard=function(e){return t.post("oppatient/patient-card",e)},this.createPatientCard=function(e){return t.post("oppatient/patient-card/new",e)}}]),angular.module("tcLib").service("opPrescriptionService",["httpService",function(t){this.save=function(e){return t.post("opprescription/saveorupdate",e)},this.searchPurchaseMedicines=function(e){return t.get("opprescription/medicine-search",e)},this.opPrescriptionList=function(e){return t.get("opprescription/list",e)}}]),angular.module("tcLib").service("opService",["httpService",function(t){this.create=function(e){return t.post("op/create",e)},this.search=function(e){return t.post("op/op-list",e)},this.get=function(e){return t.get("op/get/"+e)},this.statusList=function(e){return t.get("op/op-status-list",{date:e})},this.configCreate=function(e){return t.post("op/config/create",e)},this.configList=function(){return t.get("op/config/list")}}]),angular.module("tcLib").service("patientService",["httpService",function(t){this.save=function(e){return t.post("patient/saveorupdate",e)},this.patientsListByOptions=function(e){return t.get("patient/listbyoptions",e)},this.imageData=function(e){return t.get("patient/getphoto",e)}}]),angular.module("tcLib").service("purchasebillMedicineService",["httpService",function(t){this.purchaseBillMedicines=function(e){return t.get("purchasebillmedicine/search",e)},this.alertInfo=function(e){return t.get("purchasebillmedicine/alertinfo",e)},this.pendingBillMedicines=function(e){return t.get("purchasebillmedicine/pendingbills",{billId:e})}}]),angular.module("tcLib").service("purchasebillService",["httpService",function(i){this.createPurchaseBill=function(e){return i.post("purchasebill/save",e)},this.purchaseBillById=function(e){return i.get("purchasebill/get/"+e)},this.purchaseBillsListByOptions=function(e){return i.get("purchasebill/search",e)},this.purchaseTotal=function(e){return i.get("purchasebill/total",e)},this.createPurchaseBillPayment=function(e){return i.post("purchasebill/payment/save",e)},this.purchaseBillPaymentList=function(e){return i.get("purchasebill/payment/search",e)},this.createPurchaseBillReturn=function(e){return i.post("purchasebill/return/save",e)},this.purchaseReturns=function(e){return i.get("purchasebill/returns/get",e)},this.purchaseReturnMedicines=function(e){return i.get("purchasebill/return/medicines/get",e)},this.uploadPurchaseBill=function(e,t){return i.post("purchasebill/upload/"+t,e)}}]),angular.module("tcLib").service("reportsService",["httpService",function(t){this.salesReports=function(e){return t.get("reports/sales/bills",e)},this.salesReturnReports=function(e){return t.get("reports/sales/returns",e)},this.salesPaymentReports=function(e){return t.get("reports/sales/payments",e)},this.paymentReports=function(e){return t.post("reports/payments",e)},this.purchaseReports=function(e){return t.get("reports/purchase",e)},this.salesTransactions=function(e){return t.get("reports/salesPayments",e)},this.purchaseTransactions=function(e){return t.get("reports/purchaseTransactions",e)},this.paymentTransactionsByDateRange=function(e){return t.post("reports/create",e)},this.adjustMrpByDateRange=function(e){return t.post("reports/adjustMrp",e)},this.adjustUnitsOrAvailability=function(e){return t.post("reports/adjustunitsoravailability",e)}}]),angular.module("tcLib").service("representativeService",["httpService",function(t){this.save=function(e){return t.post("representative/saveorupdate",e)},this.representativesList=function(){return t.get("representative/list")}}]),angular.module("tcLib").service("salesbillService",["httpService",function(n){this.create=function(e){return n.post("salesbill/save",e)},this.salesBillsListByOptions=function(e){return n.get("salesbill/list",e)},this.salesAmount=function(e){return n.get("salesbill/total",e)},this.medicineSearch=function(e){return n.get("salesbill/medicines/search",e)},this.createSalesBillPayment=function(e){return n.post("salesbill/payment/save",e)},this.paymentsList=function(e){return n.get("salesbill/payment/search",{billId:e})},this.createSalesBillReturn=function(e){return n.post("salesbill/return/save",e)},this.returnsList=function(e){return n.get("salesbill/return/search",e)},this.prescriptionsList=function(e){return n.get("salesbill/prescription/search",e)},this.savePrescriptionSale=function(e,t,i){return n.post("salesbill/prescription/save/"+t+"?isResale="+(i||!1),e)},this.createPrescriptionSale=function(e){return n.post("salesbill/prescription/add",e)},this.salesReturnTotal=function(e){return n.get("salesbill/returns/total",e)},this.generateInvoiceNum=function(){return n.get("salesbill/generateinvoicenum")}}]),angular.module("tcLib").service("supplierService",["httpService",function(t){this.save=function(e){return t.post("supplier/saveorupdate",e)},this.suppliersList=function(){return t.get("supplier/list")}}]),angular.module("hcLib").run(["$templateCache",function(e){e.put("src/patient-form/patient-form.tpl.html",'<style>.borderd{\r\n       border-bottom: 1px solid gray;\r\n    }\r\n    .img-patient{\r\n        width : 200px;\r\n    }</style><h2 align="center">Patient Form</h2><div class="row"><div class="grid-md-8 card"><div class="patientForm-headline borderd"><h3>Add New Patient</h3><div class="pull-right mar-top-44px"><tc-camera ng-model="patient.photoString" confirm-text="Confirm"></tc-camera></div></div><form name="form.patientForm" class="patientForm margin-10" novalidate><div class="row"><div class="grid-md-1"></div><div class="grid-md-9 no-padding"><div class="row"><label class="grid-md-4" for="patientName">Patient Name*</label><div class="grid-md-8 no-padding"><input id="patientName" class="form-field grid-md-12" name="patientName" placeholder="Patient Name" ng-model="patient.name" required> <span class="error-msg" ng-messages="patientForm.patientName.$error"><span ng-message="required">*Name is Required.</span></span></div></div><div class="row"><label class="grid-md-4" for="aadhar">Aadhar No*</label><div class="grid-md-8 no-padding"><input id="aadhar" class="form-field grid-md-12" name="aadhar" placeholder="Aadhar No" ng-blur="isAdhaarExists(patient.adharNo)" ng-model="patient.aadharNo" ng-maxlength="12" maxlength="12" ng-disabled="isAdhaarDisabled"> <span class="error-msg">{{adhaarMsg}}</span></div></div><div class="row"><label class="grid-md-4" for="mobileNo">Mobile No*</label><div class="grid-md-8 no-padding"><input id="mobileNo" class="form-field grid-md-12" name="mobileNo" placeholder="Mobile No" ng-model="patient.mobileNo" ng-pattern="/^[0-9]*$/" ng-maxlength="10" maxlength="10" required> <span class="error-msg" ng-messages="patientForm.mobileNo.$error"><span ng-message="required">*Mobile No is Required.</span> <span ng-message="pattern">*Enter 10digits Mobile Number.</span></span></div></div><div class="row"><label class="grid-md-4" for="altMobileNo">Alt No</label><div class="grid-md-8 no-padding"><input id="altMobileNo" class="form-field grid-md-12" name="altMobileNo" placeholder="Alt Mobile No" ng-model="patient.alternateNo" ng-pattern="/^[0-9]*$/" ng-maxlength="10" maxlength="10"></div></div><div class="row"><label class="grid-md-4" for="altMobileNo">Emergency No</label><div class="grid-md-8 no-padding"><input id="emergencyNo" class="form-field grid-md-12" name="emergencyNo" placeholder="Emergency No" ng-model="patient.emergencyNo" ng-pattern="/^[0-9]*$/" ng-maxlength="10" maxlength="10"></div></div><div class="row"><label class="grid-md-4" for="village">Village*</label><div class="grid-md-8 no-padding"><input id="village" class="form-field grid-md-12" name="village" placeholder="Village" ng-model="patient.village" required> <span class="error-msg" ng-messages="patientForm.village.$error"><span ng-message="required">*Village is Required.</span></span></div></div><div class="row"><label class="grid-md-4" for="dob">DOB -- Age*</label><div class="grid-md-8 no-padding"><div class="row no-padding"><div class="grid-md-6 no-padding relative"><tc-date-picker placeholder="Choose a date" ng-model="patient.dob" ng-change="getAgeFromDob(patient.dob)"></tc-date-picker></div><span class="grid-md-1 no-padding text-center">--</span><div class="grid-md-5 no-padding"><input class="grid-md-12 form-field" name="age" ng-change="getDateFromAge(patient.age)" placeholder="Age" ng-model="patient.age"></div></div></div></div><div class="row"><label class="grid-md-4" for="gender-rltn">Gender -- Relation</label><div class="grid-md-8 no-padding"><div class="row no-padding"><div class="grid-md-4 no-padding show-inline"><select class="grid-md-12 form-field" ng-model="patient.gender" ng-options="genderType for genderType in genderTypes"></select></div><label class="grid-md-1 text-center show-inline no-padding" for="relationType">--</label><div class="grid-md-3 no-padding show-inline"><select class="grid-md-12 form-field" ng-model="patient.relationType" ng-options="relationType for relationType in relationTypes"></select></div><div class="grid-md-4 no-padding pull-right"><input id="relationName" class="form-field grid-md-12" name="age" placeholder="Relation Name" ng-model="patient.relationName"></div></div></div></div><div class="row"><label class="grid-md-4"></label><button class="btn btn-light-green" name="patientFormBtn" ng-disabled="form.patientForm.$invalid || adhaarMsg" ng-click="addPatient();">{{patient.id? \'Update\': \'Save\'}}</button></div></div><div class="grid-md-1"></div></div></form></div><div class="grid-md-4"><div ng-if="!patient.id"><img class="grid-md-12" ng-src="{{patient.photoString}}" alt="Click capture to see preview"></div><div ng-if="patient.id && !patient.photoString"><img src="./patient/getphoto?patientId={{ patient.id }}" class="img-patient" style="border:2px solid gray"></div><div ng-if="patient.id && patient.photoString"><img ng-src="{{patient.photoString}}" class="img-patient" style="border:2px solid gray"></div></div></div>')}]);